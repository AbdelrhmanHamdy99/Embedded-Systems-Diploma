
Lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000108  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000108  0000017c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000186  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000065f  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005c7  00000000  00000000  0000087b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000026b  00000000  00000000  00000e42  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000010b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000365  00000000  00000000  000010e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000013  00000000  00000000  00001449  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  0000145c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e0       	ldi	r30, 0x08	; 8
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 82 00 	jmp	0x104	; 0x104 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
		i = (i + 1) % 10; /*update i*/
		_delay_ms(1000);
    }
}
void DIO_Init(void){
	DDRD = 0xFF; /*PORTD as output*/
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	81 bb       	out	0x11, r24	; 17

unsigned char static seven_segment[] = {0x3F, 0x06, 0x5B, 0x4F,0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
int main(void)
{
	DIO_Init();
	unsigned char i = 0;
  86:	80 e0       	ldi	r24, 0x00	; 0
	while (1) 
    {
		PORTD = seven_segment[i];
		i = (i + 1) % 10; /*update i*/
  88:	ca e0       	ldi	r28, 0x0A	; 10
  8a:	d0 e0       	ldi	r29, 0x00	; 0
{
	DIO_Init();
	unsigned char i = 0;
	while (1) 
    {
		PORTD = seven_segment[i];
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	fc 01       	movw	r30, r24
  90:	e0 5a       	subi	r30, 0xA0	; 160
  92:	ff 4f       	sbci	r31, 0xFF	; 255
  94:	20 81       	ld	r18, Z
  96:	22 bb       	out	0x12, r18	; 18
		i = (i + 1) % 10; /*update i*/
  98:	01 96       	adiw	r24, 0x01	; 1
  9a:	be 01       	movw	r22, r28
  9c:	0e 94 5a 00 	call	0xb4	; 0xb4 <__divmodhi4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a0:	2f ef       	ldi	r18, 0xFF	; 255
  a2:	39 e6       	ldi	r19, 0x69	; 105
  a4:	98 e1       	ldi	r25, 0x18	; 24
  a6:	21 50       	subi	r18, 0x01	; 1
  a8:	30 40       	sbci	r19, 0x00	; 0
  aa:	90 40       	sbci	r25, 0x00	; 0
  ac:	e1 f7       	brne	.-8      	; 0xa6 <main+0x24>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <main+0x2e>
  b0:	00 00       	nop
  b2:	ec cf       	rjmp	.-40     	; 0x8c <main+0xa>

000000b4 <__divmodhi4>:
  b4:	97 fb       	bst	r25, 7
  b6:	07 2e       	mov	r0, r23
  b8:	16 f4       	brtc	.+4      	; 0xbe <__divmodhi4+0xa>
  ba:	00 94       	com	r0
  bc:	07 d0       	rcall	.+14     	; 0xcc <__divmodhi4_neg1>
  be:	77 fd       	sbrc	r23, 7
  c0:	09 d0       	rcall	.+18     	; 0xd4 <__divmodhi4_neg2>
  c2:	0e 94 6e 00 	call	0xdc	; 0xdc <__udivmodhi4>
  c6:	07 fc       	sbrc	r0, 7
  c8:	05 d0       	rcall	.+10     	; 0xd4 <__divmodhi4_neg2>
  ca:	3e f4       	brtc	.+14     	; 0xda <__divmodhi4_exit>

000000cc <__divmodhi4_neg1>:
  cc:	90 95       	com	r25
  ce:	81 95       	neg	r24
  d0:	9f 4f       	sbci	r25, 0xFF	; 255
  d2:	08 95       	ret

000000d4 <__divmodhi4_neg2>:
  d4:	70 95       	com	r23
  d6:	61 95       	neg	r22
  d8:	7f 4f       	sbci	r23, 0xFF	; 255

000000da <__divmodhi4_exit>:
  da:	08 95       	ret

000000dc <__udivmodhi4>:
  dc:	aa 1b       	sub	r26, r26
  de:	bb 1b       	sub	r27, r27
  e0:	51 e1       	ldi	r21, 0x11	; 17
  e2:	07 c0       	rjmp	.+14     	; 0xf2 <__udivmodhi4_ep>

000000e4 <__udivmodhi4_loop>:
  e4:	aa 1f       	adc	r26, r26
  e6:	bb 1f       	adc	r27, r27
  e8:	a6 17       	cp	r26, r22
  ea:	b7 07       	cpc	r27, r23
  ec:	10 f0       	brcs	.+4      	; 0xf2 <__udivmodhi4_ep>
  ee:	a6 1b       	sub	r26, r22
  f0:	b7 0b       	sbc	r27, r23

000000f2 <__udivmodhi4_ep>:
  f2:	88 1f       	adc	r24, r24
  f4:	99 1f       	adc	r25, r25
  f6:	5a 95       	dec	r21
  f8:	a9 f7       	brne	.-22     	; 0xe4 <__udivmodhi4_loop>
  fa:	80 95       	com	r24
  fc:	90 95       	com	r25
  fe:	bc 01       	movw	r22, r24
 100:	cd 01       	movw	r24, r26
 102:	08 95       	ret

00000104 <_exit>:
 104:	f8 94       	cli

00000106 <__stop_program>:
 106:	ff cf       	rjmp	.-2      	; 0x106 <__stop_program>
